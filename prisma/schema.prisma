// https://supabase.com/partners/integrations/prisma

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public", "auth"]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

model User {
  id               String  @id @default(uuid())
  customerId       String?
  email            String
  availableCredits Int     @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  records               Record[]
  creditPurchaseHistory CreditPurchaseHistory[]

  @@schema("auth")
}

model CreditPurchaseHistory {
  id        BigInt   @id @default(autoincrement())
  userId    String
  priceId   String
  credits   Int
  price     Decimal  @db.Decimal(12, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User @relation(fields: [userId], references: [id])

  @@schema("auth")
}

model Record {
  id                BigInt       @id @default(autoincrement())
  userId            String
  role              String
  rentalAddress     String
  securityDeposit   Int
  currency          String
  otherPartyEmail   String
  creditsCharged    Int
  numImages         Int
  numVideos         Int?
  totalSeconds      Int?
  totalImagesSizeMB Decimal      @db.Decimal(7, 2)
  totalVideosSizeMB Decimal?     @db.Decimal(7, 2)
  s3FolderName      String
  status            RecordStatus @default(PENDING)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  files File[]

  User User @relation(fields: [userId], references: [id])

  @@schema("auth")
}

model File {
  id            BigInt           @id @default(autoincrement())
  recordId      BigInt
  fileName      String
  fileExtension String
  fileSize      Decimal          @db.Decimal(7, 2)
  s3Key         String
  s3Location    String
  ipfsHash      String?
  type          FileType         @default(IMAGE)
  uploadStatus  FileUploadStatus @default(PENDING)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt

  Record Record @relation(fields: [recordId], references: [id])

  @@schema("auth")
}

model Currency {
  id        BigInt   @id @default(autoincrement())
  currency  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("public")
}

// ////////////////////////////////////////////////////////////
// //                                                        //
// //                          ENUMS                         //
// //                                                        //
// ////////////////////////////////////////////////////////////

enum RecordStatus {
  PENDING
  UPLOADED_TO_S3
  UPLOADED_TO_IPFS
  UPLOADED_TO_EVM

  @@schema("auth")
}

enum FileUploadStatus {
  PENDING
  UPLOADED_TO_S3
  UPLOADED_TO_IPFS

  @@schema("auth")
}

enum FileType {
  IMAGE
  VIDEO

  @@schema("auth")
}
